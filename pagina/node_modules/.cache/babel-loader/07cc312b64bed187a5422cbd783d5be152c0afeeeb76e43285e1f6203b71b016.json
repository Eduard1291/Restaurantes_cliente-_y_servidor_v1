{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\prueba_tecnica\\\\pagina\\\\src\\\\componentes\\\\ListaIngredientesEdit.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport BotonQuitar from './BotonQuitar';\nimport servidores from './servidores.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ListaIngredientesEdit = datos => {\n  _s();\n  const [ingredientes, setIngredientes] = useState([]);\n  const [nombreingrediente, setnombreingrediente] = useState('');\n  const [caloriaingrediente, setcaloriaingrediente] = useState('');\n  async function registros() {\n    const respuesta = await axios.get(servidores.urlserver + \"/ingredientes?NombreMenu=\" + datos.parametros.nombreMenu);\n    setIngredientes(respuesta.data);\n  }\n  useEffect(() => {\n    registros();\n  }, []);\n  async function agregarIngrediente() {\n    let contador = parseInt(caloriaingrediente);\n    alert(ingredientes.caloria);\n    let repuesta;\n    for (let i = 0; i < ingredientes.length; i++) {\n      //contador+=parseInt(ingredientes.caloria)\n    }\n    if (contador <= 2000) {\n      repuesta = await axios.put(servidores.urlserver + \"/ingredientes/create\", {\n        nombreMenu: '' + datos.parametros.nombreMenu,\n        nombreIngrediente: '' + nombreingrediente,\n        caloria: '' + caloriaingrediente\n      });\n    } else {\n      //alert(\"la suma total de las calorias no pueden superar las 2000 calorias\")\n    }\n    if (repuesta.data === 1) {\n      registros();\n    } else {\n      alert(\"no se pudo añadir el ingrediente\");\n    }\n  }\n  async function quitarIngrediente(datosI) {\n    await axios.delete(servidores.urlserver + \"/ingredientes/delete?idIngrediente=\" + datosI);\n    registros();\n  }\n  const elementos = ingredientes.map((datosI, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"listaIngredientess\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [datosI.nombreIngrediente, \" contiene \", datosI.caloria, \" calorias\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(BotonQuitar, {\n      quitarIngrediente: quitarIngrediente,\n      datosLista: datosI.idIngredientes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ingredientesEdit\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"agregarIngrediente\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Nombre:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"nombreIngrediente\",\n          value: nombreingrediente,\n          onChange: evento => setnombreingrediente(evento.target.value),\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"calorias:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"CaloriaIngrediente\",\n          value: caloriaingrediente,\n          onChange: evento => setcaloriaingrediente(evento.target.value),\n          type: \"number\",\n          min: 0,\n          max: 2000\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: agregarIngrediente,\n        children: \"agregar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      className: \"lineaIngredientes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"tituloIngredientes\",\n      children: \"Lista Ingredientes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      className: \"lineaIngredientes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"lista\",\n      children: elementos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(ListaIngredientesEdit, \"wI/nf5Ll6GEF9aKmKKHLaex34Jw=\");\n_c = ListaIngredientesEdit;\nexport default ListaIngredientesEdit;\nvar _c;\n$RefreshReg$(_c, \"ListaIngredientesEdit\");","map":{"version":3,"names":["axios","React","useEffect","useState","BotonQuitar","servidores","ListaIngredientesEdit","datos","ingredientes","setIngredientes","nombreingrediente","setnombreingrediente","caloriaingrediente","setcaloriaingrediente","registros","respuesta","get","urlserver","parametros","nombreMenu","data","agregarIngrediente","contador","parseInt","alert","caloria","repuesta","i","length","put","nombreIngrediente","quitarIngrediente","datosI","delete","elementos","map","index","idIngredientes","evento","target","value"],"sources":["C:/Users/ASUS/Desktop/prueba_tecnica/pagina/src/componentes/ListaIngredientesEdit.js"],"sourcesContent":["import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport BotonQuitar from './BotonQuitar'\r\nimport servidores from './servidores.json'\r\nconst ListaIngredientesEdit = (datos) => {\r\n    const [ingredientes,setIngredientes]=useState([])\r\n    const [nombreingrediente,setnombreingrediente]=useState('')\r\n    const [caloriaingrediente,setcaloriaingrediente]=useState('')\r\n\r\n\r\n    async function registros(){\r\n        const respuesta=await axios.get(servidores.urlserver+\"/ingredientes?NombreMenu=\"+datos.parametros.nombreMenu)\r\n        setIngredientes(respuesta.data)\r\n    }\r\n    useEffect(()=>{\r\n        registros();\r\n    },[]);\r\n    async function agregarIngrediente(){\r\n        let contador=parseInt(caloriaingrediente)\r\n        alert(ingredientes.caloria)\r\n        let repuesta\r\n        for(let i=0;i<ingredientes.length;i++){\r\n            //contador+=parseInt(ingredientes.caloria)\r\n        }\r\n        if (contador<=2000){\r\n                repuesta=await axios.put(servidores.urlserver+\"/ingredientes/create\",{\r\n                nombreMenu:''+datos.parametros.nombreMenu,\r\n                nombreIngrediente:''+nombreingrediente,\r\n                caloria:''+caloriaingrediente\r\n            })\r\n        }else{\r\n            //alert(\"la suma total de las calorias no pueden superar las 2000 calorias\")\r\n            \r\n        }\r\n        if (repuesta.data===1){\r\n            registros()\r\n        }else{\r\n            alert(\"no se pudo añadir el ingrediente\")\r\n        }\r\n    }\r\n\r\n    async function quitarIngrediente(datosI){\r\n        await axios.delete(servidores.urlserver+\"/ingredientes/delete?idIngrediente=\"+datosI)\r\n        registros()\r\n    }\r\n    const elementos=ingredientes.map((datosI,index)=>\r\n        <li key={index} className='listaIngredientess'>\r\n            <p>{datosI.nombreIngrediente} contiene {datosI.caloria} calorias</p>\r\n            <BotonQuitar quitarIngrediente={quitarIngrediente} datosLista={datosI.idIngredientes} />        \r\n        </li>\r\n    )\r\n    \r\n  return (\r\n    <div className='ingredientesEdit'>\r\n        <div className='agregarIngrediente'>\r\n            <label>\r\n                Nombre:\r\n                <input name='nombreIngrediente' value={nombreingrediente} onChange={evento=>setnombreingrediente(evento.target.value)} type='text'/>\r\n            </label>\r\n            <label>\r\n            calorias:\r\n                <input name='CaloriaIngrediente' value={caloriaingrediente} onChange={evento=>setcaloriaingrediente(evento.target.value)} type='number' min={0} max={2000}/>\r\n            </label>      \r\n            <button type='submit' onClick={agregarIngrediente}>agregar</button>\r\n        </div>\r\n        <hr className='lineaIngredientes'/>\r\n        <h2 className='tituloIngredientes'>Lista Ingredientes</h2>\r\n        <hr className='lineaIngredientes'/>\r\n        <ul className='lista'>\r\n            {elementos}\r\n        </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ListaIngredientesEdit"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}